{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SafeAreaView, ViewActivity, CategoriaView, BannerView, ViewPrincipal, ViewRestaurantes, TituloRestaurantes, ButtonTipoSelect, TextTipoSelect, SelectTipo } from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Principal() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      banners = _useState2[0],\n      setBanners = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categorias = _useState4[0],\n      setCategorias = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restaurantes = _useState6[0],\n      setRestaurantes = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  var _useState9 = useState('Entrega'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tipo = _useState10[0],\n      setTipo = _useState10[1];\n\n  useEffect(function () {\n    function buscaDados() {\n      var response, data;\n      return _regeneratorRuntime.async(function buscaDados$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://my-json-server.typicode.com/pablohdev/app-ifood-clone/db'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              data = _context.sent;\n              setLoaded(true);\n              setBanner(data.banner_principal);\n              setCategorias(data.categorias);\n              setRestaurantes(data.restaurantes);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              Alert.alert('Erro ao consultar' + _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    }\n\n    buscaDados();\n  }, []);\n\n  var ViewHome = function ViewHome(props) {\n    return _jsxs(ViewPrincipal, {\n      children: [_jsxs(SelectTipo, {\n        children: [_jsx(ButtonTipoSelect, {\n          onPress: function onPress() {\n            return setTipo('Entrega');\n          },\n          children: _jsx(TextTipoSelect, {\n            selected: tipo == 'Entrega',\n            children: \"Entrega\"\n          })\n        }), _jsx(ButtonTipoSelect, {\n          onPress: function onPress() {\n            return setTipo('Retirada');\n          },\n          children: _jsx(TextTipoSelect, {\n            selected: tipo == 'Retirada',\n            children: \"Retirada\"\n          })\n        })]\n      }), _jsx(CategoriaView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: categorias.map(function (categoria) {\n          return _jsx(CategoriaItem, {\n            foto: categoria.img_url,\n            texto: categoria.nome\n          }, categoria.id);\n        })\n      }), _jsx(BannerView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: banners.map(function (banner) {\n          return _jsx(BannerItem, {\n            foto: banner.banner_img_url\n          }, banner.id);\n        })\n      }), _jsx(TituloRestaurantes, {\n        children: \"Restaurantes\"\n      }), _jsx(ViewRestaurantes, {\n        children: restaurantes.map(function (restaurante) {\n          return _jsx(_Fragment, {\n            children: _jsx(RestauranteItem, {\n              foto: restaurante.url_img,\n              nome: restaurante.nome,\n              nota: restaurante.nota,\n              categoria: restaurante.categoria,\n              distancia: restaurante.distancia,\n              valorFrete: restaurante.valor_frete,\n              tempoEntrega: restaurante.tempo_entrega\n            }, restaurante.id)\n          });\n        })\n      })]\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"theme-dark\"\n    }), _jsx(SafeAreaView, {\n      children: loaded ? _jsx(ViewHome, {}) : _jsxs(ViewActivity, {\n        children: [_jsx(ActivityIndicator, {\n          color: \"#F0001A\",\n          size: \"large\"\n        }), _jsxs(Text, {\n          children: [\"Carregando dados aguarde...\", loaded]\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/Cliente/Desktop/Ifood/Ifood/src/pages/Principal/index.js"],"names":["React","useState","useEffect","StatusBar","SafeAreaView","ViewActivity","CategoriaView","BannerView","ViewPrincipal","ViewRestaurantes","TituloRestaurantes","ButtonTipoSelect","TextTipoSelect","SelectTipo","Principal","banners","setBanners","categorias","setCategorias","restaurantes","setRestaurantes","loaded","setLoaded","tipo","setTipo","buscaDados","fetch","response","json","data","setBanner","banner_principal","Alert","alert","ViewHome","props","map","categoria","img_url","nome","id","banner","banner_img_url","restaurante","url_img","nota","distancia","valor_frete","tempo_entrega"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport  {Text, View,  Alert, ActivityIndicator } from 'react-native';\r\n\r\nimport {\r\n  SafeAreaView,\r\n  ViewActivity,\r\n  CategoriaView,\r\n  BannerView,\r\n  ViewPrincipal,\r\n  ViewRestaurantes,\r\n  TituloRestaurantes,\r\n  ButtonTipoSelect,\r\n  TextTipoSelect,\r\n  SelectTipo\r\n} from './style';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Principal() {\r\n\r\n\r\n  const [banners, setBanners] = useState([])\r\n  const [categorias, setCategorias] = useState([])\r\n  const [restaurantes, setRestaurantes] = useState([])\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [tipo, setTipo] = useState('Entrega');\r\n\r\n  useEffect(()=>{\r\n    async function buscaDados() {\r\n\r\n      try {\r\n        const response = await fetch('http://my-json-server.typicode.com/pablohdev/app-ifood-clone/db');\r\n\r\n        const data = await response.json();\r\n\r\n\r\n        setLoaded(true);\r\n\r\n        setBanner(data.banner_principal);\r\n        setCategorias(data.categorias);\r\n        setRestaurantes(data.restaurantes);\r\n\r\n      } catch(e){\r\n        Alert.alert('Erro ao consultar' + e);\r\n      }\r\n    }\r\n\r\n    buscaDados();\r\n\r\n  },[])\r\n\r\n  const ViewHome = (props) => {\r\n    return (\r\n      <ViewPrincipal>\r\n        <SelectTipo>\r\n          <ButtonTipoSelect onPress={() => setTipo('Entrega')}><TextTipoSelect selected={tipo == 'Entrega'}>Entrega</TextTipoSelect></ButtonTipoSelect>\r\n          <ButtonTipoSelect onPress={() => setTipo('Retirada')}><TextTipoSelect selected={tipo == 'Retirada'}>Retirada</TextTipoSelect></ButtonTipoSelect>\r\n        </SelectTipo>\r\n        <CategoriaView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          {categorias.map(categoria => (\r\n            <CategoriaItem key={categoria.id} foto={categoria.img_url} texto={categoria.nome} />\r\n          ))}\r\n        </CategoriaView>\r\n        <BannerView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n          {banners.map(banner => (\r\n            <BannerItem key={banner.id} foto={banner.banner_img_url} />\r\n          ))}\r\n        </BannerView>\r\n        <TituloRestaurantes>Restaurantes</TituloRestaurantes>\r\n        <ViewRestaurantes>\r\n          {restaurantes.map(restaurante => (\r\n            <>\r\n              <RestauranteItem\r\n                key={restaurante.id}\r\n                foto={restaurante.url_img}\r\n                nome={restaurante.nome}\r\n                nota={restaurante.nota}\r\n                categoria={restaurante.categoria}\r\n                distancia={restaurante.distancia}\r\n                valorFrete={restaurante.valor_frete}\r\n                tempoEntrega={restaurante.tempo_entrega}\r\n              />\r\n            </>\r\n          ))}\r\n        </ViewRestaurantes>\r\n      </ViewPrincipal>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <StatusBar style=\"theme-dark\" />\r\n      <SafeAreaView>\r\n        {loaded\r\n          ?\r\n          (\r\n            <ViewHome />\r\n          )\r\n          :\r\n          (\r\n            <ViewActivity >\r\n              <ActivityIndicator color=\"#F0001A\" size=\"large\" />\r\n              <Text>Carregando dados aguarde...{loaded}</Text>\r\n            </ViewActivity>\r\n          )}\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}